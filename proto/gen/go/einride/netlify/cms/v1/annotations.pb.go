// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: einride/netlify/cms/v1/annotations.proto

package cmsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Publish mode.
type Config_PublishMode int32

const (
	// Default value. This value is unused.
	Config_PUBLISH_MODE_UNSPECIFIED Config_PublishMode = 0
	// All unpublished entries will be arranged in a board according to their status,
	// and they can be further reviewed and edited before going live.
	Config_EDITORIAL_WORKFLOW Config_PublishMode = 1
)

// Enum value maps for Config_PublishMode.
var (
	Config_PublishMode_name = map[int32]string{
		0: "PUBLISH_MODE_UNSPECIFIED",
		1: "EDITORIAL_WORKFLOW",
	}
	Config_PublishMode_value = map[string]int32{
		"PUBLISH_MODE_UNSPECIFIED": 0,
		"EDITORIAL_WORKFLOW":       1,
	}
)

func (x Config_PublishMode) Enum() *Config_PublishMode {
	p := new(Config_PublishMode)
	*p = x
	return p
}

func (x Config_PublishMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Config_PublishMode) Descriptor() protoreflect.EnumDescriptor {
	return file_einride_netlify_cms_v1_annotations_proto_enumTypes[0].Descriptor()
}

func (Config_PublishMode) Type() protoreflect.EnumType {
	return &file_einride_netlify_cms_v1_annotations_proto_enumTypes[0]
}

func (x Config_PublishMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Config_PublishMode.Descriptor instead.
func (Config_PublishMode) EnumDescriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{0, 0}
}

// Slug encoding.
type Config_Slug_Encoding int32

const (
	// Default value. This value is unused.
	Config_Slug_ENCODING_UNSPECIFIED Config_Slug_Encoding = 0
	// Sanitize filenames (slugs) according to RFC3987 and the WHATWG URL spec.
	// This spec allows non-ASCII (or non-Latin) characters to exist in URLs.
	Config_Slug_UNICODE Config_Slug_Encoding = 1
	// Sanitize filenames (slugs) according to RFC3986.
	// The only allowed characters are (0-9, a-z, A-Z, _, -, ~).
	Config_Slug_ASCII Config_Slug_Encoding = 2
)

// Enum value maps for Config_Slug_Encoding.
var (
	Config_Slug_Encoding_name = map[int32]string{
		0: "ENCODING_UNSPECIFIED",
		1: "UNICODE",
		2: "ASCII",
	}
	Config_Slug_Encoding_value = map[string]int32{
		"ENCODING_UNSPECIFIED": 0,
		"UNICODE":              1,
		"ASCII":                2,
	}
)

func (x Config_Slug_Encoding) Enum() *Config_Slug_Encoding {
	p := new(Config_Slug_Encoding)
	*p = x
	return p
}

func (x Config_Slug_Encoding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Config_Slug_Encoding) Descriptor() protoreflect.EnumDescriptor {
	return file_einride_netlify_cms_v1_annotations_proto_enumTypes[1].Descriptor()
}

func (Config_Slug_Encoding) Type() protoreflect.EnumType {
	return &file_einride_netlify_cms_v1_annotations_proto_enumTypes[1]
}

func (x Config_Slug_Encoding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Config_Slug_Encoding.Descriptor instead.
func (Config_Slug_Encoding) EnumDescriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{0, 2, 0}
}

// GeoJSON type.
type MapWidget_Type int32

const (
	// Default value. This value is unused.
	MapWidget_TYPE_UNSPECIFIED MapWidget_Type = 0
	// Point.
	MapWidget_POINT MapWidget_Type = 1
	// LineString.
	MapWidget_LINE_STRING MapWidget_Type = 2
	// Polygon.
	MapWidget_POLYGON MapWidget_Type = 3
)

// Enum value maps for MapWidget_Type.
var (
	MapWidget_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "POINT",
		2: "LINE_STRING",
		3: "POLYGON",
	}
	MapWidget_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"POINT":            1,
		"LINE_STRING":      2,
		"POLYGON":          3,
	}
)

func (x MapWidget_Type) Enum() *MapWidget_Type {
	p := new(MapWidget_Type)
	*p = x
	return p
}

func (x MapWidget_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MapWidget_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_einride_netlify_cms_v1_annotations_proto_enumTypes[2].Descriptor()
}

func (MapWidget_Type) Type() protoreflect.EnumType {
	return &file_einride_netlify_cms_v1_annotations_proto_enumTypes[2]
}

func (x MapWidget_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MapWidget_Type.Descriptor instead.
func (MapWidget_Type) EnumDescriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{14, 0}
}

// Value type of the number widget.
type NumberWidget_ValueType int32

const (
	// Default value. This value is unused.
	NumberWidget_VALUE_TYPE_UNSPECIFIED NumberWidget_ValueType = 0
	// Int.
	NumberWidget_INT NumberWidget_ValueType = 1
	// Float.
	NumberWidget_FLOAT NumberWidget_ValueType = 2
	// String.
	NumberWidget_STRING NumberWidget_ValueType = 3
)

// Enum value maps for NumberWidget_ValueType.
var (
	NumberWidget_ValueType_name = map[int32]string{
		0: "VALUE_TYPE_UNSPECIFIED",
		1: "INT",
		2: "FLOAT",
		3: "STRING",
	}
	NumberWidget_ValueType_value = map[string]int32{
		"VALUE_TYPE_UNSPECIFIED": 0,
		"INT":                    1,
		"FLOAT":                  2,
		"STRING":                 3,
	}
)

func (x NumberWidget_ValueType) Enum() *NumberWidget_ValueType {
	p := new(NumberWidget_ValueType)
	*p = x
	return p
}

func (x NumberWidget_ValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NumberWidget_ValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_einride_netlify_cms_v1_annotations_proto_enumTypes[3].Descriptor()
}

func (NumberWidget_ValueType) Type() protoreflect.EnumType {
	return &file_einride_netlify_cms_v1_annotations_proto_enumTypes[3]
}

func (x NumberWidget_ValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NumberWidget_ValueType.Descriptor instead.
func (NumberWidget_ValueType) EnumDescriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{16, 0}
}

// Netlify CMS config.
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies how to access the content for your site,
	// including authentication.
	Backend *Config_Backend `protobuf:"bytes,1,opt,name=backend,proto3" json:"backend,omitempty"`
	// Local backend configuration.
	LocalBackend *Config_LocalBackend `protobuf:"bytes,2,opt,name=local_backend,json=localBackend,proto3" json:"local_backend,omitempty"`
	// Allows you to enable "Editorial Workflow" mode for more control
	// over the content publishing phases.
	PublishMode Config_PublishMode `protobuf:"varint,3,opt,name=publish_mode,json=publishMode,proto3,enum=einride.netlify.cms.v1.Config_PublishMode" json:"publish_mode,omitempty"`
	// Specifies the folder path where uploaded files should be saved,
	// relative to the base of the repo.
	MediaFolder string `protobuf:"bytes,4,opt,name=media_folder,json=mediaFolder,proto3" json:"media_folder,omitempty"`
	// Change the logo displayed at the top of the login page,
	// allowing you to brand the CMS with your own logo.
	LogoUrl string `protobuf:"bytes,5,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	// The slug configuration.
	Slug *Config_Slug `protobuf:"bytes,6,opt,name=slug,proto3" json:"slug,omitempty"`
	// The heart of your Netlify CMS configuration,
	// as it determines how content types and editor fields in the UI generate files
	// and content in your repository.
	Collections []*Collection `protobuf:"bytes,7,rep,name=collections,proto3" json:"collections,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetBackend() *Config_Backend {
	if x != nil {
		return x.Backend
	}
	return nil
}

func (x *Config) GetLocalBackend() *Config_LocalBackend {
	if x != nil {
		return x.LocalBackend
	}
	return nil
}

func (x *Config) GetPublishMode() Config_PublishMode {
	if x != nil {
		return x.PublishMode
	}
	return Config_PUBLISH_MODE_UNSPECIFIED
}

func (x *Config) GetMediaFolder() string {
	if x != nil {
		return x.MediaFolder
	}
	return ""
}

func (x *Config) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *Config) GetSlug() *Config_Slug {
	if x != nil {
		return x.Slug
	}
	return nil
}

func (x *Config) GetCollections() []*Collection {
	if x != nil {
		return x.Collections
	}
	return nil
}

// Netlify CMS collection config.
type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for the collection, used as the key when referenced in other contexts
	// (like the relation widget).
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// An entry's title when viewing a list of entries, and is used in slug creation.
	IdentifierField string `protobuf:"bytes,2,opt,name=identifier_field,json=identifierField,proto3" json:"identifier_field,omitempty"`
	// Label for the collection in the editor UI; defaults to the value of name.
	Label string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	// Singular label for certain elements in the editor; defaults to the value of label.
	LabelSingular string `protobuf:"bytes,4,opt,name=label_singular,json=labelSingular,proto3" json:"label_singular,omitempty"`
	// Optional text, displayed below the label when viewing a collection.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Folder location.
	Folder string `protobuf:"bytes,6,opt,name=folder,proto3" json:"folder,omitempty"`
	// True allows users to create new items in the collection; defaults to false.
	Create bool `protobuf:"varint,7,opt,name=create,proto3" json:"create,omitempty"`
	// TODO.
	Format string `protobuf:"bytes,8,opt,name=format,proto3" json:"format,omitempty"`
	// TODO.
	Summary string `protobuf:"bytes,9,opt,name=summary,proto3" json:"summary,omitempty"`
	// Editor config.
	Editor *Collection_Editor `protobuf:"bytes,10,opt,name=editor,proto3" json:"editor,omitempty"`
	// Maps editor UI widgets to field-value pairs in the saved file.
	Fields []*Field `protobuf:"bytes,11,rep,name=fields,proto3" json:"fields,omitempty"`
	// Owner of the collection.
	Owner *Owner `protobuf:"bytes,12,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{1}
}

func (x *Collection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Collection) GetIdentifierField() string {
	if x != nil {
		return x.IdentifierField
	}
	return ""
}

func (x *Collection) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Collection) GetLabelSingular() string {
	if x != nil {
		return x.LabelSingular
	}
	return ""
}

func (x *Collection) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Collection) GetFolder() string {
	if x != nil {
		return x.Folder
	}
	return ""
}

func (x *Collection) GetCreate() bool {
	if x != nil {
		return x.Create
	}
	return false
}

func (x *Collection) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *Collection) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Collection) GetEditor() *Collection_Editor {
	if x != nil {
		return x.Editor
	}
	return nil
}

func (x *Collection) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Collection) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

// An owner.
type Owner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Display name of the owner.
	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// URI of the owner.
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *Owner) Reset() {
	*x = Owner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Owner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Owner) ProtoMessage() {}

func (x *Owner) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Owner.ProtoReflect.Descriptor instead.
func (*Owner) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{2}
}

func (x *Owner) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Owner) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// Netlify CMS field config.
type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for the field.
	// Used as the key when referenced in other contexts (like the relation widget).
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Label for the field in the editor UI; defaults to the value of name.
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	// Optional comment to add before the field (only supported for yaml).
	Comment string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	// The field widget.
	Widget *Widget `protobuf:"bytes,4,opt,name=widget,proto3" json:"widget,omitempty"`
	// Flag indicating that this field should be ignored by Netlify CMS.
	Ignore bool `protobuf:"varint,5,opt,name=ignore,proto3" json:"ignore,omitempty"`
	// Owner of the field (automatically appended to the label).
	Owner *Owner `protobuf:"bytes,6,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{3}
}

func (x *Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Field) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Field) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Field) GetWidget() *Widget {
	if x != nil {
		return x.Widget
	}
	return nil
}

func (x *Field) GetIgnore() bool {
	if x != nil {
		return x.Ignore
	}
	return false
}

func (x *Field) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

// Widgets define the data type and interface for entry fields.
type Widget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether the widget is mandatory.
	RequiredValue bool `protobuf:"varint,1,opt,name=required_value,json=requiredValue,proto3" json:"required_value,omitempty"`
	// Helper text directly below the widget.
	Hint string `protobuf:"bytes,2,opt,name=hint,proto3" json:"hint,omitempty"`
	// The validation pattern.
	Pattern *Widget_Pattern `protobuf:"bytes,3,opt,name=pattern,proto3" json:"pattern,omitempty"`
	// The widget type.
	//
	// Types that are assignable to WidgetType:
	//
	//	*Widget_BooleanWidget
	//	*Widget_CodeWidget
	//	*Widget_ColorWidget
	//	*Widget_DateTimeWidget
	//	*Widget_FileWidget
	//	*Widget_HiddenWidget
	//	*Widget_ImageWidget
	//	*Widget_ListWidget
	//	*Widget_MapWidget
	//	*Widget_MarkdownWidget
	//	*Widget_NumberWidget
	//	*Widget_ObjectWidget
	//	*Widget_RelationWidget
	//	*Widget_SelectWidget
	//	*Widget_StringWidget
	//	*Widget_TextWidget
	//	*Widget_CustomWidget
	WidgetType isWidget_WidgetType `protobuf_oneof:"widget_type"`
}

func (x *Widget) Reset() {
	*x = Widget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Widget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Widget) ProtoMessage() {}

func (x *Widget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Widget.ProtoReflect.Descriptor instead.
func (*Widget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{4}
}

func (x *Widget) GetRequiredValue() bool {
	if x != nil {
		return x.RequiredValue
	}
	return false
}

func (x *Widget) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

func (x *Widget) GetPattern() *Widget_Pattern {
	if x != nil {
		return x.Pattern
	}
	return nil
}

func (m *Widget) GetWidgetType() isWidget_WidgetType {
	if m != nil {
		return m.WidgetType
	}
	return nil
}

func (x *Widget) GetBooleanWidget() *BooleanWidget {
	if x, ok := x.GetWidgetType().(*Widget_BooleanWidget); ok {
		return x.BooleanWidget
	}
	return nil
}

func (x *Widget) GetCodeWidget() *CodeWidget {
	if x, ok := x.GetWidgetType().(*Widget_CodeWidget); ok {
		return x.CodeWidget
	}
	return nil
}

func (x *Widget) GetColorWidget() *ColorWidget {
	if x, ok := x.GetWidgetType().(*Widget_ColorWidget); ok {
		return x.ColorWidget
	}
	return nil
}

func (x *Widget) GetDateTimeWidget() *DateTimeWidget {
	if x, ok := x.GetWidgetType().(*Widget_DateTimeWidget); ok {
		return x.DateTimeWidget
	}
	return nil
}

func (x *Widget) GetFileWidget() *FileWidget {
	if x, ok := x.GetWidgetType().(*Widget_FileWidget); ok {
		return x.FileWidget
	}
	return nil
}

func (x *Widget) GetHiddenWidget() *HiddenWidget {
	if x, ok := x.GetWidgetType().(*Widget_HiddenWidget); ok {
		return x.HiddenWidget
	}
	return nil
}

func (x *Widget) GetImageWidget() *ImageWidget {
	if x, ok := x.GetWidgetType().(*Widget_ImageWidget); ok {
		return x.ImageWidget
	}
	return nil
}

func (x *Widget) GetListWidget() *ListWidget {
	if x, ok := x.GetWidgetType().(*Widget_ListWidget); ok {
		return x.ListWidget
	}
	return nil
}

func (x *Widget) GetMapWidget() *MapWidget {
	if x, ok := x.GetWidgetType().(*Widget_MapWidget); ok {
		return x.MapWidget
	}
	return nil
}

func (x *Widget) GetMarkdownWidget() *MarkdownWidget {
	if x, ok := x.GetWidgetType().(*Widget_MarkdownWidget); ok {
		return x.MarkdownWidget
	}
	return nil
}

func (x *Widget) GetNumberWidget() *NumberWidget {
	if x, ok := x.GetWidgetType().(*Widget_NumberWidget); ok {
		return x.NumberWidget
	}
	return nil
}

func (x *Widget) GetObjectWidget() *ObjectWidget {
	if x, ok := x.GetWidgetType().(*Widget_ObjectWidget); ok {
		return x.ObjectWidget
	}
	return nil
}

func (x *Widget) GetRelationWidget() *RelationWidget {
	if x, ok := x.GetWidgetType().(*Widget_RelationWidget); ok {
		return x.RelationWidget
	}
	return nil
}

func (x *Widget) GetSelectWidget() *SelectWidget {
	if x, ok := x.GetWidgetType().(*Widget_SelectWidget); ok {
		return x.SelectWidget
	}
	return nil
}

func (x *Widget) GetStringWidget() *StringWidget {
	if x, ok := x.GetWidgetType().(*Widget_StringWidget); ok {
		return x.StringWidget
	}
	return nil
}

func (x *Widget) GetTextWidget() *TextWidget {
	if x, ok := x.GetWidgetType().(*Widget_TextWidget); ok {
		return x.TextWidget
	}
	return nil
}

func (x *Widget) GetCustomWidget() *CustomWidget {
	if x, ok := x.GetWidgetType().(*Widget_CustomWidget); ok {
		return x.CustomWidget
	}
	return nil
}

type isWidget_WidgetType interface {
	isWidget_WidgetType()
}

type Widget_BooleanWidget struct {
	// Boolean widget.
	BooleanWidget *BooleanWidget `protobuf:"bytes,4,opt,name=boolean_widget,json=booleanWidget,proto3,oneof"`
}

type Widget_CodeWidget struct {
	// Code widget.
	CodeWidget *CodeWidget `protobuf:"bytes,5,opt,name=code_widget,json=codeWidget,proto3,oneof"`
}

type Widget_ColorWidget struct {
	// Color widget.
	ColorWidget *ColorWidget `protobuf:"bytes,6,opt,name=color_widget,json=colorWidget,proto3,oneof"`
}

type Widget_DateTimeWidget struct {
	// DateTime widget.
	DateTimeWidget *DateTimeWidget `protobuf:"bytes,8,opt,name=date_time_widget,json=dateTimeWidget,proto3,oneof"`
}

type Widget_FileWidget struct {
	// File widget.
	FileWidget *FileWidget `protobuf:"bytes,9,opt,name=file_widget,json=fileWidget,proto3,oneof"`
}

type Widget_HiddenWidget struct {
	// Hidden widget.
	HiddenWidget *HiddenWidget `protobuf:"bytes,10,opt,name=hidden_widget,json=hiddenWidget,proto3,oneof"`
}

type Widget_ImageWidget struct {
	// Image widget.
	ImageWidget *ImageWidget `protobuf:"bytes,11,opt,name=image_widget,json=imageWidget,proto3,oneof"`
}

type Widget_ListWidget struct {
	// List widget.
	ListWidget *ListWidget `protobuf:"bytes,12,opt,name=list_widget,json=listWidget,proto3,oneof"`
}

type Widget_MapWidget struct {
	// Map widget.
	MapWidget *MapWidget `protobuf:"bytes,13,opt,name=map_widget,json=mapWidget,proto3,oneof"`
}

type Widget_MarkdownWidget struct {
	// Markdown widget.
	MarkdownWidget *MarkdownWidget `protobuf:"bytes,14,opt,name=markdown_widget,json=markdownWidget,proto3,oneof"`
}

type Widget_NumberWidget struct {
	// Number widget.
	NumberWidget *NumberWidget `protobuf:"bytes,15,opt,name=number_widget,json=numberWidget,proto3,oneof"`
}

type Widget_ObjectWidget struct {
	// Object widget.
	ObjectWidget *ObjectWidget `protobuf:"bytes,16,opt,name=object_widget,json=objectWidget,proto3,oneof"`
}

type Widget_RelationWidget struct {
	// Relation widget.
	RelationWidget *RelationWidget `protobuf:"bytes,17,opt,name=relation_widget,json=relationWidget,proto3,oneof"`
}

type Widget_SelectWidget struct {
	// Select widget.
	SelectWidget *SelectWidget `protobuf:"bytes,18,opt,name=select_widget,json=selectWidget,proto3,oneof"`
}

type Widget_StringWidget struct {
	// String widget.
	StringWidget *StringWidget `protobuf:"bytes,19,opt,name=string_widget,json=stringWidget,proto3,oneof"`
}

type Widget_TextWidget struct {
	// Text widget.
	TextWidget *TextWidget `protobuf:"bytes,20,opt,name=text_widget,json=textWidget,proto3,oneof"`
}

type Widget_CustomWidget struct {
	// Custom widget.
	CustomWidget *CustomWidget `protobuf:"bytes,21,opt,name=custom_widget,json=customWidget,proto3,oneof"`
}

func (*Widget_BooleanWidget) isWidget_WidgetType() {}

func (*Widget_CodeWidget) isWidget_WidgetType() {}

func (*Widget_ColorWidget) isWidget_WidgetType() {}

func (*Widget_DateTimeWidget) isWidget_WidgetType() {}

func (*Widget_FileWidget) isWidget_WidgetType() {}

func (*Widget_HiddenWidget) isWidget_WidgetType() {}

func (*Widget_ImageWidget) isWidget_WidgetType() {}

func (*Widget_ListWidget) isWidget_WidgetType() {}

func (*Widget_MapWidget) isWidget_WidgetType() {}

func (*Widget_MarkdownWidget) isWidget_WidgetType() {}

func (*Widget_NumberWidget) isWidget_WidgetType() {}

func (*Widget_ObjectWidget) isWidget_WidgetType() {}

func (*Widget_RelationWidget) isWidget_WidgetType() {}

func (*Widget_SelectWidget) isWidget_WidgetType() {}

func (*Widget_StringWidget) isWidget_WidgetType() {}

func (*Widget_TextWidget) isWidget_WidgetType() {}

func (*Widget_CustomWidget) isWidget_WidgetType() {}

// The boolean widget translates a toggle switch input to a true/false value.
type CustomWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of the custom widget.
	Widget string `protobuf:"bytes,1,opt,name=widget,proto3" json:"widget,omitempty"`
	// Widget options, as raw YAML strings appended to the custom widget.
	Options []string `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *CustomWidget) Reset() {
	*x = CustomWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomWidget) ProtoMessage() {}

func (x *CustomWidget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomWidget.ProtoReflect.Descriptor instead.
func (*CustomWidget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{5}
}

func (x *CustomWidget) GetWidget() string {
	if x != nil {
		return x.Widget
	}
	return ""
}

func (x *CustomWidget) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

// The boolean widget translates a toggle switch input to a true/false value.
type BooleanWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Default value.
	DefaultValue bool `protobuf:"varint,1,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
}

func (x *BooleanWidget) Reset() {
	*x = BooleanWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooleanWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanWidget) ProtoMessage() {}

func (x *BooleanWidget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanWidget.ProtoReflect.Descriptor instead.
func (*BooleanWidget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{6}
}

func (x *BooleanWidget) GetDefaultValue() bool {
	if x != nil {
		return x.DefaultValue
	}
	return false
}

// The code widget provides a code editor (powered by Codemirror) with optional syntax awareness.
type CodeWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Default language to use.
	DefaultLanguage string `protobuf:"bytes,1,opt,name=default_language,json=defaultLanguage,proto3" json:"default_language,omitempty"`
	// Allows syntax to be changed.
	AllowLanguageSelection bool `protobuf:"varint,2,opt,name=allow_language_selection,json=allowLanguageSelection,proto3" json:"allow_language_selection,omitempty"`
	// Sets key names if outputting to an object.
	Keys *CodeWidget_Keys `protobuf:"bytes,3,opt,name=keys,proto3" json:"keys,omitempty"`
}

func (x *CodeWidget) Reset() {
	*x = CodeWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeWidget) ProtoMessage() {}

func (x *CodeWidget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeWidget.ProtoReflect.Descriptor instead.
func (*CodeWidget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{7}
}

func (x *CodeWidget) GetDefaultLanguage() string {
	if x != nil {
		return x.DefaultLanguage
	}
	return ""
}

func (x *CodeWidget) GetAllowLanguageSelection() bool {
	if x != nil {
		return x.AllowLanguageSelection
	}
	return false
}

func (x *CodeWidget) GetKeys() *CodeWidget_Keys {
	if x != nil {
		return x.Keys
	}
	return nil
}

// The color widget translates a color picker to a color string.
type ColorWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sets the default value.
	DefaultValue string `protobuf:"bytes,1,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// Allows manual editing of the color input value.
	AllowInput bool `protobuf:"varint,2,opt,name=allow_input,json=allowInput,proto3" json:"allow_input,omitempty"`
	// Enables alpha editing.
	EnableAlpha bool `protobuf:"varint,3,opt,name=enable_alpha,json=enableAlpha,proto3" json:"enable_alpha,omitempty"`
}

func (x *ColorWidget) Reset() {
	*x = ColorWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorWidget) ProtoMessage() {}

func (x *ColorWidget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorWidget.ProtoReflect.Descriptor instead.
func (*ColorWidget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{8}
}

func (x *ColorWidget) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *ColorWidget) GetAllowInput() bool {
	if x != nil {
		return x.AllowInput
	}
	return false
}

func (x *ColorWidget) GetEnableAlpha() bool {
	if x != nil {
		return x.EnableAlpha
	}
	return false
}

// The datetime widget translates a datetime picker to a datetime string.
type DateTimeWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Accepts a datetime string. Defaults to current datetime.
	DefaultValue string `protobuf:"bytes,1,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// Sets storage format. Accepts Moment.js tokens. Defaults to raw Date object.
	Format string `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	// Sets date display format in UI. Accepts Moment.js tokens.
	DateFormat string `protobuf:"bytes,3,opt,name=date_format,json=dateFormat,proto3" json:"date_format,omitempty"`
	// Sets time display format in UI. Accepts Moment.js tokens.
	TimeFormat string `protobuf:"bytes,4,opt,name=time_format,json=timeFormat,proto3" json:"time_format,omitempty"`
	// When set to true, the datetime picker will display times in UTC.
	PickerUtc bool `protobuf:"varint,5,opt,name=picker_utc,json=pickerUtc,proto3" json:"picker_utc,omitempty"`
}

func (x *DateTimeWidget) Reset() {
	*x = DateTimeWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateTimeWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateTimeWidget) ProtoMessage() {}

func (x *DateTimeWidget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateTimeWidget.ProtoReflect.Descriptor instead.
func (*DateTimeWidget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{9}
}

func (x *DateTimeWidget) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *DateTimeWidget) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *DateTimeWidget) GetDateFormat() string {
	if x != nil {
		return x.DateFormat
	}
	return ""
}

func (x *DateTimeWidget) GetTimeFormat() string {
	if x != nil {
		return x.TimeFormat
	}
	return ""
}

func (x *DateTimeWidget) GetPickerUtc() bool {
	if x != nil {
		return x.PickerUtc
	}
	return false
}

// The file widget allows editors to upload a file or select an existing one from the media library.
type FileWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Accepts a file path string.
	DefaultValue string `protobuf:"bytes,1,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"` // TODO: Add remaining fields.
}

func (x *FileWidget) Reset() {
	*x = FileWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileWidget) ProtoMessage() {}

func (x *FileWidget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileWidget.ProtoReflect.Descriptor instead.
func (*FileWidget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{10}
}

func (x *FileWidget) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

// Hidden widgets do not display in the UI.
type HiddenWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Accepts any valid data type.
	//
	// Types that are assignable to DefaultValue:
	//
	//	*HiddenWidget_DefaultBool
	//	*HiddenWidget_DefaultString
	//	*HiddenWidget_DefaultDouble
	//	*HiddenWidget_DefaultInt64
	DefaultValue isHiddenWidget_DefaultValue `protobuf_oneof:"default_value"`
}

func (x *HiddenWidget) Reset() {
	*x = HiddenWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HiddenWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiddenWidget) ProtoMessage() {}

func (x *HiddenWidget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiddenWidget.ProtoReflect.Descriptor instead.
func (*HiddenWidget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{11}
}

func (m *HiddenWidget) GetDefaultValue() isHiddenWidget_DefaultValue {
	if m != nil {
		return m.DefaultValue
	}
	return nil
}

func (x *HiddenWidget) GetDefaultBool() bool {
	if x, ok := x.GetDefaultValue().(*HiddenWidget_DefaultBool); ok {
		return x.DefaultBool
	}
	return false
}

func (x *HiddenWidget) GetDefaultString() string {
	if x, ok := x.GetDefaultValue().(*HiddenWidget_DefaultString); ok {
		return x.DefaultString
	}
	return ""
}

func (x *HiddenWidget) GetDefaultDouble() float64 {
	if x, ok := x.GetDefaultValue().(*HiddenWidget_DefaultDouble); ok {
		return x.DefaultDouble
	}
	return 0
}

func (x *HiddenWidget) GetDefaultInt64() int64 {
	if x, ok := x.GetDefaultValue().(*HiddenWidget_DefaultInt64); ok {
		return x.DefaultInt64
	}
	return 0
}

type isHiddenWidget_DefaultValue interface {
	isHiddenWidget_DefaultValue()
}

type HiddenWidget_DefaultBool struct {
	// Default bool.
	DefaultBool bool `protobuf:"varint,1,opt,name=default_bool,json=defaultBool,proto3,oneof"`
}

type HiddenWidget_DefaultString struct {
	// Default string.
	DefaultString string `protobuf:"bytes,2,opt,name=default_string,json=defaultString,proto3,oneof"`
}

type HiddenWidget_DefaultDouble struct {
	// Default double.
	DefaultDouble float64 `protobuf:"fixed64,3,opt,name=default_double,json=defaultDouble,proto3,oneof"`
}

type HiddenWidget_DefaultInt64 struct {
	// Default int64.
	DefaultInt64 int64 `protobuf:"varint,4,opt,name=default_int64,json=defaultInt64,proto3,oneof"`
}

func (*HiddenWidget_DefaultBool) isHiddenWidget_DefaultValue() {}

func (*HiddenWidget_DefaultString) isHiddenWidget_DefaultValue() {}

func (*HiddenWidget_DefaultDouble) isHiddenWidget_DefaultValue() {}

func (*HiddenWidget_DefaultInt64) isHiddenWidget_DefaultValue() {}

// The image widget allows editors to upload an image or select an existing one from the media library.
type ImageWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Accepts a file path string.
	DefaultValue string `protobuf:"bytes,1,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"` // TODO: Add remaining fields.
}

func (x *ImageWidget) Reset() {
	*x = ImageWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageWidget) ProtoMessage() {}

func (x *ImageWidget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageWidget.ProtoReflect.Descriptor instead.
func (*ImageWidget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{12}
}

func (x *ImageWidget) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

// The list widget allows you to create a repeatable item in the UI which saves as a list of widget values.
type ListWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Shows the button to add additional items.
	AllowAdd bool `protobuf:"varint,1,opt,name=allow_add,json=allowAdd,proto3" json:"allow_add,omitempty"`
	// Collapse the entries.
	Collapsed bool `protobuf:"varint,2,opt,name=collapsed,proto3" json:"collapsed,omitempty"`
	// Specify the label displayed on collapsed entries.
	Summary string `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	// Collapse the list widget to hide all of it's entries.
	MinimizeCollapsed bool `protobuf:"varint,4,opt,name=minimize_collapsed,json=minimizeCollapsed,proto3" json:"minimize_collapsed,omitempty"`
	// Text to show on the add button.
	LabelSingular string `protobuf:"bytes,5,opt,name=label_singular,json=labelSingular,proto3" json:"label_singular,omitempty"`
	// Widget fields to be included in each repeatable iteration.
	Fields []*Field `protobuf:"bytes,6,rep,name=fields,proto3" json:"fields,omitempty"`
	// Maximum number of items in the list.
	MaxItems int64 `protobuf:"varint,7,opt,name=max_items,json=maxItems,proto3" json:"max_items,omitempty"`
	// Minimum number of items in the list.
	MinItems int64 `protobuf:"varint,8,opt,name=min_items,json=minItems,proto3" json:"min_items,omitempty"`
	// Add new entries to the top of the list.
	AddToTop bool `protobuf:"varint,9,opt,name=add_to_top,json=addToTop,proto3" json:"add_to_top,omitempty"`
}

func (x *ListWidget) Reset() {
	*x = ListWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWidget) ProtoMessage() {}

func (x *ListWidget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWidget.ProtoReflect.Descriptor instead.
func (*ListWidget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{13}
}

func (x *ListWidget) GetAllowAdd() bool {
	if x != nil {
		return x.AllowAdd
	}
	return false
}

func (x *ListWidget) GetCollapsed() bool {
	if x != nil {
		return x.Collapsed
	}
	return false
}

func (x *ListWidget) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ListWidget) GetMinimizeCollapsed() bool {
	if x != nil {
		return x.MinimizeCollapsed
	}
	return false
}

func (x *ListWidget) GetLabelSingular() string {
	if x != nil {
		return x.LabelSingular
	}
	return ""
}

func (x *ListWidget) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ListWidget) GetMaxItems() int64 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

func (x *ListWidget) GetMinItems() int64 {
	if x != nil {
		return x.MinItems
	}
	return 0
}

func (x *ListWidget) GetAddToTop() bool {
	if x != nil {
		return x.AddToTop
	}
	return false
}

// The map widget allows you to edit spatial data using an interactive map.
type MapWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Accepts a number to specify precision of saved coordinates.
	// Defaults to 7 decimals.
	Decimals int64 `protobuf:"varint,1,opt,name=decimals,proto3" json:"decimals,omitempty"`
	// Accepts a GeoJSON string containing a single geometry.
	DefaultValue string `protobuf:"bytes,2,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// The type of GeoJSON object.
	Type MapWidget_Type `protobuf:"varint,3,opt,name=type,proto3,enum=einride.netlify.cms.v1.MapWidget_Type" json:"type,omitempty"`
}

func (x *MapWidget) Reset() {
	*x = MapWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapWidget) ProtoMessage() {}

func (x *MapWidget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapWidget.ProtoReflect.Descriptor instead.
func (*MapWidget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{14}
}

func (x *MapWidget) GetDecimals() int64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *MapWidget) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *MapWidget) GetType() MapWidget_Type {
	if x != nil {
		return x.Type
	}
	return MapWidget_TYPE_UNSPECIFIED
}

// The markdown widget provides a full fledged text editor
// allowing users to format text with features such as headings and blockquotes.
type MarkdownWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Accepts markdown content.
	DefaultValue string `protobuf:"bytes,1,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// Sets the widget height to minimum possible.
	Minimal bool `protobuf:"varint,2,opt,name=minimal,proto3" json:"minimal,omitempty"` // TODO: Add more fields.
}

func (x *MarkdownWidget) Reset() {
	*x = MarkdownWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkdownWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkdownWidget) ProtoMessage() {}

func (x *MarkdownWidget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkdownWidget.ProtoReflect.Descriptor instead.
func (*MarkdownWidget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{15}
}

func (x *MarkdownWidget) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *MarkdownWidget) GetMinimal() bool {
	if x != nil {
		return x.Minimal
	}
	return false
}

// The markdown widget provides a full fledged text editor allowing users to format text with features such as headings and blockquotes.
type NumberWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Default value.
	DefaultValue float64 `protobuf:"fixed64,1,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// The value type.
	ValueType NumberWidget_ValueType `protobuf:"varint,2,opt,name=value_type,json=valueType,proto3,enum=einride.netlify.cms.v1.NumberWidget_ValueType" json:"value_type,omitempty"`
	// Minimum value accepted.
	MinValue float64 `protobuf:"fixed64,3,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	// Maximum value accepted.
	MaxValue float64 `protobuf:"fixed64,4,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	// Number for stepping up/down values. 1 by default.
	Step float64 `protobuf:"fixed64,5,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *NumberWidget) Reset() {
	*x = NumberWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberWidget) ProtoMessage() {}

func (x *NumberWidget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberWidget.ProtoReflect.Descriptor instead.
func (*NumberWidget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{16}
}

func (x *NumberWidget) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *NumberWidget) GetValueType() NumberWidget_ValueType {
	if x != nil {
		return x.ValueType
	}
	return NumberWidget_VALUE_TYPE_UNSPECIFIED
}

func (x *NumberWidget) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

func (x *NumberWidget) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *NumberWidget) GetStep() float64 {
	if x != nil {
		return x.Step
	}
	return 0
}

// The object widget allows you to group multiple widgets together, nested under a single field.
type ObjectWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Collapse the widgets content by default.
	Collapsed bool `protobuf:"varint,1,opt,name=collapsed,proto3" json:"collapsed,omitempty"`
	// Specify the label displayed when the object is collapsed.
	Summary string `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	// A nested list of widget fields.
	Fields []*Field `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ObjectWidget) Reset() {
	*x = ObjectWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectWidget) ProtoMessage() {}

func (x *ObjectWidget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectWidget.ProtoReflect.Descriptor instead.
func (*ObjectWidget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{17}
}

func (x *ObjectWidget) GetCollapsed() bool {
	if x != nil {
		return x.Collapsed
	}
	return false
}

func (x *ObjectWidget) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ObjectWidget) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

// The relation widget allows you to reference items from another collection.
type RelationWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the referenced collection.
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// Name of the field from the referenced collection.
	ValueField string `protobuf:"bytes,2,opt,name=value_field,json=valueField,proto3" json:"value_field,omitempty"`
	// Names of fields in the to search for the typed value.
	SearchFields []string `protobuf:"bytes,3,rep,name=search_fields,json=searchFields,proto3" json:"search_fields,omitempty"`
	// Names of fields in the that will render in the autocomplete menu.
	DisplayFields []string `protobuf:"bytes,4,rep,name=display_fields,json=displayFields,proto3" json:"display_fields,omitempty"`
	// Flag indicating if multiple values are supported.
	Multiple bool `protobuf:"varint,5,opt,name=multiple,proto3" json:"multiple,omitempty"`
}

func (x *RelationWidget) Reset() {
	*x = RelationWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationWidget) ProtoMessage() {}

func (x *RelationWidget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationWidget.ProtoReflect.Descriptor instead.
func (*RelationWidget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{18}
}

func (x *RelationWidget) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *RelationWidget) GetValueField() string {
	if x != nil {
		return x.ValueField
	}
	return ""
}

func (x *RelationWidget) GetSearchFields() []string {
	if x != nil {
		return x.SearchFields
	}
	return nil
}

func (x *RelationWidget) GetDisplayFields() []string {
	if x != nil {
		return x.DisplayFields
	}
	return nil
}

func (x *RelationWidget) GetMultiple() bool {
	if x != nil {
		return x.Multiple
	}
	return false
}

// The select widget allows you to pick a string value from a dropdown menu.
type SelectWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Default value.
	DefaultValue []string `protobuf:"bytes,1,rep,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// Selectable options.
	Options []*SelectWidget_Option `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	// Allow multiple selection.
	Multiple bool `protobuf:"varint,3,opt,name=multiple,proto3" json:"multiple,omitempty"`
	// Minimum selection of multiple items.
	MultipleMin int64 `protobuf:"varint,4,opt,name=multiple_min,json=multipleMin,proto3" json:"multiple_min,omitempty"`
	// Maximum selection of multiple items.
	MultipleMax int64 `protobuf:"varint,5,opt,name=multiple_max,json=multipleMax,proto3" json:"multiple_max,omitempty"`
}

func (x *SelectWidget) Reset() {
	*x = SelectWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectWidget) ProtoMessage() {}

func (x *SelectWidget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectWidget.ProtoReflect.Descriptor instead.
func (*SelectWidget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{19}
}

func (x *SelectWidget) GetDefaultValue() []string {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *SelectWidget) GetOptions() []*SelectWidget_Option {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *SelectWidget) GetMultiple() bool {
	if x != nil {
		return x.Multiple
	}
	return false
}

func (x *SelectWidget) GetMultipleMin() int64 {
	if x != nil {
		return x.MultipleMin
	}
	return 0
}

func (x *SelectWidget) GetMultipleMax() int64 {
	if x != nil {
		return x.MultipleMax
	}
	return 0
}

// The string widget translates a basic text input to a string value. For larger textarea inputs, use the text widget.
type StringWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Default value.
	DefaultValue string `protobuf:"bytes,1,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
}

func (x *StringWidget) Reset() {
	*x = StringWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringWidget) ProtoMessage() {}

func (x *StringWidget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringWidget.ProtoReflect.Descriptor instead.
func (*StringWidget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{20}
}

func (x *StringWidget) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

// The text widget takes a multiline text field and saves it as a string. For shorter text inputs, use the string widget.
type TextWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Default value.
	DefaultValue string `protobuf:"bytes,1,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
}

func (x *TextWidget) Reset() {
	*x = TextWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextWidget) ProtoMessage() {}

func (x *TextWidget) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextWidget.ProtoReflect.Descriptor instead.
func (*TextWidget) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{21}
}

func (x *TextWidget) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

// Backend config.
type Config_Backend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the backend.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The git repo.
	// Required for github, gitlab, and bitbucket backends; ignored by git-gateway.
	// Follows the pattern [org-or-username]/[repo-name].
	Repo string `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	// The branch where published content is stored.
	// All CMS commits and PRs are made to this branch.
	Branch string `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
	// The squash merge option causes all commits to be "squashed" into a single commit
	// when the pull request is merged, and the resulting commit is rebased onto
	// the target branch.
	SquashMerges bool `protobuf:"varint,4,opt,name=squash_merges,json=squashMerges,proto3" json:"squash_merges,omitempty"`
	// Customize the templates used by Netlify CMS to generate commit messages.
	CommitMessages *Config_Backend_CommitMessages `protobuf:"bytes,5,opt,name=commit_messages,json=commitMessages,proto3" json:"commit_messages,omitempty"`
	// OAuth client hostname (just the base domain, no path).
	BaseUrl string `protobuf:"bytes,6,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	// Sets the site_id query param sent to the API endpoint.
	SiteDomain string `protobuf:"bytes,7,opt,name=site_domain,json=siteDomain,proto3" json:"site_domain,omitempty"`
}

func (x *Config_Backend) Reset() {
	*x = Config_Backend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_Backend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_Backend) ProtoMessage() {}

func (x *Config_Backend) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_Backend.ProtoReflect.Descriptor instead.
func (*Config_Backend) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Config_Backend) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Config_Backend) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *Config_Backend) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *Config_Backend) GetSquashMerges() bool {
	if x != nil {
		return x.SquashMerges
	}
	return false
}

func (x *Config_Backend) GetCommitMessages() *Config_Backend_CommitMessages {
	if x != nil {
		return x.CommitMessages
	}
	return nil
}

func (x *Config_Backend) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *Config_Backend) GetSiteDomain() string {
	if x != nil {
		return x.SiteDomain
	}
	return ""
}

// Local backend configuration.
type Config_LocalBackend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// URL of the local backend.
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Config_LocalBackend) Reset() {
	*x = Config_LocalBackend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_LocalBackend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_LocalBackend) ProtoMessage() {}

func (x *Config_LocalBackend) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_LocalBackend.ProtoReflect.Descriptor instead.
func (*Config_LocalBackend) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Config_LocalBackend) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// Slug configuration.
//
// The slug option allows you to change how filenames for entries are created
// and sanitized. It also applies to filenames of media inserted via the
// default media library.
type Config_Slug struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The slug encoding.
	Encoding Config_Slug_Encoding `protobuf:"varint,1,opt,name=encoding,proto3,enum=einride.netlify.cms.v1.Config_Slug_Encoding" json:"encoding,omitempty"`
	// Set to true to remove diacritics from slug characters before sanitizing.
	// This is often helpful when using ascii encoding.
	CleanAccents bool `protobuf:"varint,2,opt,name=clean_accents,json=cleanAccents,proto3" json:"clean_accents,omitempty"`
	// The replacement string used to substitute unsafe characters, defaults to -.
	SanitizeReplacement string `protobuf:"bytes,3,opt,name=sanitize_replacement,json=sanitizeReplacement,proto3" json:"sanitize_replacement,omitempty"`
}

func (x *Config_Slug) Reset() {
	*x = Config_Slug{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_Slug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_Slug) ProtoMessage() {}

func (x *Config_Slug) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_Slug.ProtoReflect.Descriptor instead.
func (*Config_Slug) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Config_Slug) GetEncoding() Config_Slug_Encoding {
	if x != nil {
		return x.Encoding
	}
	return Config_Slug_ENCODING_UNSPECIFIED
}

func (x *Config_Slug) GetCleanAccents() bool {
	if x != nil {
		return x.CleanAccents
	}
	return false
}

func (x *Config_Slug) GetSanitizeReplacement() string {
	if x != nil {
		return x.SanitizeReplacement
	}
	return ""
}

// Commit message templates.
type Config_Backend_CommitMessages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A new entry is created.
	Create string `protobuf:"bytes,1,opt,name=create,proto3" json:"create,omitempty"`
	// An existing entry is changed.
	Update string `protobuf:"bytes,2,opt,name=update,proto3" json:"update,omitempty"`
	// An existing entry is deleted.
	Delete string `protobuf:"bytes,3,opt,name=delete,proto3" json:"delete,omitempty"`
	// A media file is uploaded.
	UploadMedia string `protobuf:"bytes,4,opt,name=upload_media,json=uploadMedia,proto3" json:"upload_media,omitempty"`
	// A media file is deleted.
	DeleteMedia string `protobuf:"bytes,5,opt,name=delete_media,json=deleteMedia,proto3" json:"delete_media,omitempty"`
	// A commit is made via a forked repository.
	OpenAuthoring string `protobuf:"bytes,6,opt,name=open_authoring,json=openAuthoring,proto3" json:"open_authoring,omitempty"`
}

func (x *Config_Backend_CommitMessages) Reset() {
	*x = Config_Backend_CommitMessages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_Backend_CommitMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_Backend_CommitMessages) ProtoMessage() {}

func (x *Config_Backend_CommitMessages) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_Backend_CommitMessages.ProtoReflect.Descriptor instead.
func (*Config_Backend_CommitMessages) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Config_Backend_CommitMessages) GetCreate() string {
	if x != nil {
		return x.Create
	}
	return ""
}

func (x *Config_Backend_CommitMessages) GetUpdate() string {
	if x != nil {
		return x.Update
	}
	return ""
}

func (x *Config_Backend_CommitMessages) GetDelete() string {
	if x != nil {
		return x.Delete
	}
	return ""
}

func (x *Config_Backend_CommitMessages) GetUploadMedia() string {
	if x != nil {
		return x.UploadMedia
	}
	return ""
}

func (x *Config_Backend_CommitMessages) GetDeleteMedia() string {
	if x != nil {
		return x.DeleteMedia
	}
	return ""
}

func (x *Config_Backend_CommitMessages) GetOpenAuthoring() string {
	if x != nil {
		return x.OpenAuthoring
	}
	return ""
}

// Editor config.
type Collection_Editor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Set to false to disable the preview pane for this collection or file.
	Preview bool `protobuf:"varint,1,opt,name=preview,proto3" json:"preview,omitempty"`
}

func (x *Collection_Editor) Reset() {
	*x = Collection_Editor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection_Editor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection_Editor) ProtoMessage() {}

func (x *Collection_Editor) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection_Editor.ProtoReflect.Descriptor instead.
func (*Collection_Editor) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Collection_Editor) GetPreview() bool {
	if x != nil {
		return x.Preview
	}
	return false
}

// Add field validation by specifying a list with a regex pattern and an error message.
// More extensive validation can be achieved with custom widgets.
type Widget_Pattern struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Regexp to use for validation.
	Regexp string `protobuf:"bytes,1,opt,name=regexp,proto3" json:"regexp,omitempty"`
	// Error message when validation fails.
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *Widget_Pattern) Reset() {
	*x = Widget_Pattern{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Widget_Pattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Widget_Pattern) ProtoMessage() {}

func (x *Widget_Pattern) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Widget_Pattern.ProtoReflect.Descriptor instead.
func (*Widget_Pattern) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Widget_Pattern) GetRegexp() string {
	if x != nil {
		return x.Regexp
	}
	return ""
}

func (x *Widget_Pattern) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Sets key names if outputting to an object.
type CodeWidget_Keys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Key name for code. Defaults to 'code'.
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// Key name for lang. Defaults to 'lang'.
	Lang string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *CodeWidget_Keys) Reset() {
	*x = CodeWidget_Keys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeWidget_Keys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeWidget_Keys) ProtoMessage() {}

func (x *CodeWidget_Keys) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeWidget_Keys.ProtoReflect.Descriptor instead.
func (*CodeWidget_Keys) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{7, 0}
}

func (x *CodeWidget_Keys) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CodeWidget_Keys) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

// Option with label and value.
type SelectWidget_Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The label.
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	// The value.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SelectWidget_Option) Reset() {
	*x = SelectWidget_Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectWidget_Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectWidget_Option) ProtoMessage() {}

func (x *SelectWidget_Option) ProtoReflect() protoreflect.Message {
	mi := &file_einride_netlify_cms_v1_annotations_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectWidget_Option.ProtoReflect.Descriptor instead.
func (*SelectWidget_Option) Descriptor() ([]byte, []int) {
	return file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP(), []int{19, 0}
}

func (x *SelectWidget_Option) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *SelectWidget_Option) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var file_einride_netlify_cms_v1_annotations_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*Config)(nil),
		Field:         220007734,
		Name:          "einride.netlify.cms.v1.config",
		Tag:           "bytes,220007734,opt,name=config",
		Filename:      "einride/netlify/cms/v1/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*Collection)(nil),
		Field:         73371499,
		Name:          "einride.netlify.cms.v1.collection",
		Tag:           "bytes,73371499,opt,name=collection",
		Filename:      "einride/netlify/cms/v1/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*Field)(nil),
		Field:         265097061,
		Name:          "einride.netlify.cms.v1.field",
		Tag:           "bytes,265097061,opt,name=field",
		Filename:      "einride/netlify/cms/v1/annotations.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// $((16#$(echo einride.netlify.cms.v1.config | sha256sum | cut -c 1-7)))
	//
	// optional einride.netlify.cms.v1.Config config = 220007734;
	E_Config = &file_einride_netlify_cms_v1_annotations_proto_extTypes[0]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// $((16#$(echo einride.netlify.cms.v1.collection | sha256sum | cut -c 1-7)))
	//
	// optional einride.netlify.cms.v1.Collection collection = 73371499;
	E_Collection = &file_einride_netlify_cms_v1_annotations_proto_extTypes[1]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// $((16#$(echo einride.netlify.cms.v1.field | sha256sum | cut -c 1-7)))
	//
	// optional einride.netlify.cms.v1.Field field = 265097061;
	E_Field = &file_einride_netlify_cms_v1_annotations_proto_extTypes[2]
)

var File_einride_netlify_cms_v1_annotations_proto protoreflect.FileDescriptor

var file_einride_netlify_cms_v1_annotations_proto_rawDesc = []byte{
	0x0a, 0x28, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66,
	0x79, 0x2f, 0x63, 0x6d, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x65, 0x69, 0x6e, 0x72,
	0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e,
	0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x09, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x40, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69,
	0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x12, 0x50, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69,
	0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x42, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x42, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x12, 0x4d, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x65, 0x69, 0x6e, 0x72,
	0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c,
	0x12, 0x37, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79,
	0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53,
	0x6c, 0x75, 0x67, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x44, 0x0a, 0x0b, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79,
	0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0xd2, 0x03, 0x0a, 0x07, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x65, 0x70, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x71, 0x75, 0x61, 0x73, 0x68, 0x5f, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x73, 0x71, 0x75, 0x61, 0x73, 0x68, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x73,
	0x12, 0x5e, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x65, 0x69, 0x6e, 0x72,
	0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x69, 0x74, 0x65, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x69, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x1a, 0xc5, 0x01, 0x0a,
	0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x25, 0x0a,
	0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x1a, 0x20, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x42, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0xe6, 0x01, 0x0a, 0x04, 0x53, 0x6c, 0x75, 0x67, 0x12,
	0x48, 0x0a, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2c, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c,
	0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x53, 0x6c, 0x75, 0x67, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x65,
	0x61, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x31,
	0x0a, 0x14, 0x73, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x61,
	0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x3c, 0x0a, 0x08, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a,
	0x14, 0x45, 0x4e, 0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x49, 0x43, 0x4f,
	0x44, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x53, 0x43, 0x49, 0x49, 0x10, 0x02, 0x22,
	0x43, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x18, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12,
	0x45, 0x44, 0x49, 0x54, 0x4f, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c,
	0x4f, 0x57, 0x10, 0x01, 0x22, 0xdf, 0x03, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x69, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x41, 0x0a, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65,
	0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x06,
	0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65,
	0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x33, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65,
	0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63,
	0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x1a, 0x22, 0x0a, 0x06, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x3c, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x69, 0x22, 0xd0, 0x01, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74,
	0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x52, 0x06, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c,
	0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0xe8, 0x0b, 0x0a, 0x06, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x12, 0x40, 0x0a,
	0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79,
	0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x50,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12,
	0x4e, 0x0a, 0x0e, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64,
	0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x48, 0x00,
	0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12,
	0x45, 0x0a, 0x0b, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e,
	0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x64, 0x65,
	0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x48, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f,
	0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65,
	0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63,
	0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x57, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x12, 0x52, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x77, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x69, 0x6e,
	0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x12, 0x45, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x77, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x69, 0x6e, 0x72,
	0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x48, 0x00, 0x52,
	0x0a, 0x66, 0x69, 0x6c, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x4b, 0x0a, 0x0d, 0x68,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74,
	0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x68, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x48, 0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79,
	0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x12, 0x45, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64,
	0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x6c,
	0x69, 0x73, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x0a, 0x6d, 0x61, 0x70,
	0x5f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e,
	0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x48, 0x00, 0x52, 0x09, 0x6d, 0x61, 0x70, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x51, 0x0a,
	0x0f, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65,
	0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x48, 0x00,
	0x52, 0x0e, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x12, 0x4b, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64,
	0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x48, 0x00, 0x52,
	0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x4b, 0x0a,
	0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e,
	0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x51, 0x0a, 0x0f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65,
	0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x4b, 0x0a,
	0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e,
	0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x4b, 0x0a, 0x0d, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c,
	0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x45, 0x0a, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65,
	0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63,
	0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x4b,
	0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x1a, 0x46, 0x0a, 0x07, 0x50,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x40, 0x0a, 0x0c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x34, 0x0a, 0x0d, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x0a, 0x43,
	0x6f, 0x64, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b,
	0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65,
	0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63,
	0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x2e, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x1a, 0x2e, 0x0a, 0x04, 0x4b,
	0x65, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x76, 0x0a, 0x0b, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c,
	0x70, 0x68, 0x61, 0x22, 0xae, 0x01, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f,
	0x75, 0x74, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x55, 0x74, 0x63, 0x22, 0x31, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x0c, 0x48, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x27, 0x0a,
	0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00,
	0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12,
	0x25, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x42, 0x0f, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc6, 0x02, 0x0a, 0x0a,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x64, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x61,
	0x70, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c,
	0x61, 0x70, 0x73, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x2d, 0x0a, 0x12, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c,
	0x61, 0x70, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x69, 0x7a, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x69, 0x6e,
	0x67, 0x75, 0x6c, 0x61, 0x72, 0x12, 0x35, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x61, 0x78, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x69,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x6f,
	0x5f, 0x74, 0x6f, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x64, 0x64, 0x54,
	0x6f, 0x54, 0x6f, 0x70, 0x22, 0xcf, 0x01, 0x0a, 0x09, 0x4d, 0x61, 0x70, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x26, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c,
	0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x45, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x49, 0x4e, 0x45,
	0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x4f, 0x4c,
	0x59, 0x47, 0x4f, 0x4e, 0x10, 0x03, 0x22, 0x4f, 0x0a, 0x0e, 0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f,
	0x77, 0x6e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x22, 0x99, 0x02, 0x0a, 0x0c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4d, 0x0a,
	0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2e, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c,
	0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61,
	0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x22, 0x47, 0x0a, 0x09, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x56, 0x41, 0x4c, 0x55, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e,
	0x47, 0x10, 0x03, 0x22, 0x7d, 0x0a, 0x0c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x35, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x69,
	0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x22, 0x92,
	0x02, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4d, 0x61, 0x78, 0x1a, 0x34, 0x0a,
	0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x0a, 0x54, 0x65, 0x78, 0x74,
	0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x57, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xb6, 0x9a, 0xf4, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65,
	0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63,
	0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x3a, 0x66, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xeb, 0x9e, 0xfe, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65,
	0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63,
	0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x55, 0x0a, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe5, 0x9e, 0xb4, 0x7e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e,
	0x63, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x42, 0xf9, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x69, 0x6e, 0x72,
	0x69, 0x64, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6d, 0x73, 0x2e,
	0x76, 0x31, 0x42, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4e, 0x67, 0x6f, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69,
	0x64, 0x65, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2d, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2d, 0x63, 0x6d, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64,
	0x65, 0x2f, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2f, 0x63, 0x6d, 0x73, 0x2f, 0x76, 0x31,
	0x3b, 0x63, 0x6d, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x45, 0x4e, 0x43, 0xaa, 0x02, 0x16, 0x45,
	0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x2e, 0x43,
	0x6d, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x16, 0x45, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x5c,
	0x4e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x5c, 0x43, 0x6d, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x22, 0x45, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x5c, 0x4e, 0x65, 0x74, 0x6c, 0x69, 0x66, 0x79,
	0x5c, 0x43, 0x6d, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x19, 0x45, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x3a, 0x3a, 0x4e,
	0x65, 0x74, 0x6c, 0x69, 0x66, 0x79, 0x3a, 0x3a, 0x43, 0x6d, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_einride_netlify_cms_v1_annotations_proto_rawDescOnce sync.Once
	file_einride_netlify_cms_v1_annotations_proto_rawDescData = file_einride_netlify_cms_v1_annotations_proto_rawDesc
)

func file_einride_netlify_cms_v1_annotations_proto_rawDescGZIP() []byte {
	file_einride_netlify_cms_v1_annotations_proto_rawDescOnce.Do(func() {
		file_einride_netlify_cms_v1_annotations_proto_rawDescData = protoimpl.X.CompressGZIP(file_einride_netlify_cms_v1_annotations_proto_rawDescData)
	})
	return file_einride_netlify_cms_v1_annotations_proto_rawDescData
}

var file_einride_netlify_cms_v1_annotations_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_einride_netlify_cms_v1_annotations_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_einride_netlify_cms_v1_annotations_proto_goTypes = []interface{}{
	(Config_PublishMode)(0),               // 0: einride.netlify.cms.v1.Config.PublishMode
	(Config_Slug_Encoding)(0),             // 1: einride.netlify.cms.v1.Config.Slug.Encoding
	(MapWidget_Type)(0),                   // 2: einride.netlify.cms.v1.MapWidget.Type
	(NumberWidget_ValueType)(0),           // 3: einride.netlify.cms.v1.NumberWidget.ValueType
	(*Config)(nil),                        // 4: einride.netlify.cms.v1.Config
	(*Collection)(nil),                    // 5: einride.netlify.cms.v1.Collection
	(*Owner)(nil),                         // 6: einride.netlify.cms.v1.Owner
	(*Field)(nil),                         // 7: einride.netlify.cms.v1.Field
	(*Widget)(nil),                        // 8: einride.netlify.cms.v1.Widget
	(*CustomWidget)(nil),                  // 9: einride.netlify.cms.v1.CustomWidget
	(*BooleanWidget)(nil),                 // 10: einride.netlify.cms.v1.BooleanWidget
	(*CodeWidget)(nil),                    // 11: einride.netlify.cms.v1.CodeWidget
	(*ColorWidget)(nil),                   // 12: einride.netlify.cms.v1.ColorWidget
	(*DateTimeWidget)(nil),                // 13: einride.netlify.cms.v1.DateTimeWidget
	(*FileWidget)(nil),                    // 14: einride.netlify.cms.v1.FileWidget
	(*HiddenWidget)(nil),                  // 15: einride.netlify.cms.v1.HiddenWidget
	(*ImageWidget)(nil),                   // 16: einride.netlify.cms.v1.ImageWidget
	(*ListWidget)(nil),                    // 17: einride.netlify.cms.v1.ListWidget
	(*MapWidget)(nil),                     // 18: einride.netlify.cms.v1.MapWidget
	(*MarkdownWidget)(nil),                // 19: einride.netlify.cms.v1.MarkdownWidget
	(*NumberWidget)(nil),                  // 20: einride.netlify.cms.v1.NumberWidget
	(*ObjectWidget)(nil),                  // 21: einride.netlify.cms.v1.ObjectWidget
	(*RelationWidget)(nil),                // 22: einride.netlify.cms.v1.RelationWidget
	(*SelectWidget)(nil),                  // 23: einride.netlify.cms.v1.SelectWidget
	(*StringWidget)(nil),                  // 24: einride.netlify.cms.v1.StringWidget
	(*TextWidget)(nil),                    // 25: einride.netlify.cms.v1.TextWidget
	(*Config_Backend)(nil),                // 26: einride.netlify.cms.v1.Config.Backend
	(*Config_LocalBackend)(nil),           // 27: einride.netlify.cms.v1.Config.LocalBackend
	(*Config_Slug)(nil),                   // 28: einride.netlify.cms.v1.Config.Slug
	(*Config_Backend_CommitMessages)(nil), // 29: einride.netlify.cms.v1.Config.Backend.CommitMessages
	(*Collection_Editor)(nil),             // 30: einride.netlify.cms.v1.Collection.Editor
	(*Widget_Pattern)(nil),                // 31: einride.netlify.cms.v1.Widget.Pattern
	(*CodeWidget_Keys)(nil),               // 32: einride.netlify.cms.v1.CodeWidget.Keys
	(*SelectWidget_Option)(nil),           // 33: einride.netlify.cms.v1.SelectWidget.Option
	(*descriptorpb.FileOptions)(nil),      // 34: google.protobuf.FileOptions
	(*descriptorpb.MessageOptions)(nil),   // 35: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),     // 36: google.protobuf.FieldOptions
}
var file_einride_netlify_cms_v1_annotations_proto_depIdxs = []int32{
	26, // 0: einride.netlify.cms.v1.Config.backend:type_name -> einride.netlify.cms.v1.Config.Backend
	27, // 1: einride.netlify.cms.v1.Config.local_backend:type_name -> einride.netlify.cms.v1.Config.LocalBackend
	0,  // 2: einride.netlify.cms.v1.Config.publish_mode:type_name -> einride.netlify.cms.v1.Config.PublishMode
	28, // 3: einride.netlify.cms.v1.Config.slug:type_name -> einride.netlify.cms.v1.Config.Slug
	5,  // 4: einride.netlify.cms.v1.Config.collections:type_name -> einride.netlify.cms.v1.Collection
	30, // 5: einride.netlify.cms.v1.Collection.editor:type_name -> einride.netlify.cms.v1.Collection.Editor
	7,  // 6: einride.netlify.cms.v1.Collection.fields:type_name -> einride.netlify.cms.v1.Field
	6,  // 7: einride.netlify.cms.v1.Collection.owner:type_name -> einride.netlify.cms.v1.Owner
	8,  // 8: einride.netlify.cms.v1.Field.widget:type_name -> einride.netlify.cms.v1.Widget
	6,  // 9: einride.netlify.cms.v1.Field.owner:type_name -> einride.netlify.cms.v1.Owner
	31, // 10: einride.netlify.cms.v1.Widget.pattern:type_name -> einride.netlify.cms.v1.Widget.Pattern
	10, // 11: einride.netlify.cms.v1.Widget.boolean_widget:type_name -> einride.netlify.cms.v1.BooleanWidget
	11, // 12: einride.netlify.cms.v1.Widget.code_widget:type_name -> einride.netlify.cms.v1.CodeWidget
	12, // 13: einride.netlify.cms.v1.Widget.color_widget:type_name -> einride.netlify.cms.v1.ColorWidget
	13, // 14: einride.netlify.cms.v1.Widget.date_time_widget:type_name -> einride.netlify.cms.v1.DateTimeWidget
	14, // 15: einride.netlify.cms.v1.Widget.file_widget:type_name -> einride.netlify.cms.v1.FileWidget
	15, // 16: einride.netlify.cms.v1.Widget.hidden_widget:type_name -> einride.netlify.cms.v1.HiddenWidget
	16, // 17: einride.netlify.cms.v1.Widget.image_widget:type_name -> einride.netlify.cms.v1.ImageWidget
	17, // 18: einride.netlify.cms.v1.Widget.list_widget:type_name -> einride.netlify.cms.v1.ListWidget
	18, // 19: einride.netlify.cms.v1.Widget.map_widget:type_name -> einride.netlify.cms.v1.MapWidget
	19, // 20: einride.netlify.cms.v1.Widget.markdown_widget:type_name -> einride.netlify.cms.v1.MarkdownWidget
	20, // 21: einride.netlify.cms.v1.Widget.number_widget:type_name -> einride.netlify.cms.v1.NumberWidget
	21, // 22: einride.netlify.cms.v1.Widget.object_widget:type_name -> einride.netlify.cms.v1.ObjectWidget
	22, // 23: einride.netlify.cms.v1.Widget.relation_widget:type_name -> einride.netlify.cms.v1.RelationWidget
	23, // 24: einride.netlify.cms.v1.Widget.select_widget:type_name -> einride.netlify.cms.v1.SelectWidget
	24, // 25: einride.netlify.cms.v1.Widget.string_widget:type_name -> einride.netlify.cms.v1.StringWidget
	25, // 26: einride.netlify.cms.v1.Widget.text_widget:type_name -> einride.netlify.cms.v1.TextWidget
	9,  // 27: einride.netlify.cms.v1.Widget.custom_widget:type_name -> einride.netlify.cms.v1.CustomWidget
	32, // 28: einride.netlify.cms.v1.CodeWidget.keys:type_name -> einride.netlify.cms.v1.CodeWidget.Keys
	7,  // 29: einride.netlify.cms.v1.ListWidget.fields:type_name -> einride.netlify.cms.v1.Field
	2,  // 30: einride.netlify.cms.v1.MapWidget.type:type_name -> einride.netlify.cms.v1.MapWidget.Type
	3,  // 31: einride.netlify.cms.v1.NumberWidget.value_type:type_name -> einride.netlify.cms.v1.NumberWidget.ValueType
	7,  // 32: einride.netlify.cms.v1.ObjectWidget.fields:type_name -> einride.netlify.cms.v1.Field
	33, // 33: einride.netlify.cms.v1.SelectWidget.options:type_name -> einride.netlify.cms.v1.SelectWidget.Option
	29, // 34: einride.netlify.cms.v1.Config.Backend.commit_messages:type_name -> einride.netlify.cms.v1.Config.Backend.CommitMessages
	1,  // 35: einride.netlify.cms.v1.Config.Slug.encoding:type_name -> einride.netlify.cms.v1.Config.Slug.Encoding
	34, // 36: einride.netlify.cms.v1.config:extendee -> google.protobuf.FileOptions
	35, // 37: einride.netlify.cms.v1.collection:extendee -> google.protobuf.MessageOptions
	36, // 38: einride.netlify.cms.v1.field:extendee -> google.protobuf.FieldOptions
	4,  // 39: einride.netlify.cms.v1.config:type_name -> einride.netlify.cms.v1.Config
	5,  // 40: einride.netlify.cms.v1.collection:type_name -> einride.netlify.cms.v1.Collection
	7,  // 41: einride.netlify.cms.v1.field:type_name -> einride.netlify.cms.v1.Field
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	39, // [39:42] is the sub-list for extension type_name
	36, // [36:39] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_einride_netlify_cms_v1_annotations_proto_init() }
func file_einride_netlify_cms_v1_annotations_proto_init() {
	if File_einride_netlify_cms_v1_annotations_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Owner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Widget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BooleanWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateTimeWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HiddenWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkdownWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_Backend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_LocalBackend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_Slug); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_Backend_CommitMessages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection_Editor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Widget_Pattern); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeWidget_Keys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_netlify_cms_v1_annotations_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectWidget_Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_einride_netlify_cms_v1_annotations_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Widget_BooleanWidget)(nil),
		(*Widget_CodeWidget)(nil),
		(*Widget_ColorWidget)(nil),
		(*Widget_DateTimeWidget)(nil),
		(*Widget_FileWidget)(nil),
		(*Widget_HiddenWidget)(nil),
		(*Widget_ImageWidget)(nil),
		(*Widget_ListWidget)(nil),
		(*Widget_MapWidget)(nil),
		(*Widget_MarkdownWidget)(nil),
		(*Widget_NumberWidget)(nil),
		(*Widget_ObjectWidget)(nil),
		(*Widget_RelationWidget)(nil),
		(*Widget_SelectWidget)(nil),
		(*Widget_StringWidget)(nil),
		(*Widget_TextWidget)(nil),
		(*Widget_CustomWidget)(nil),
	}
	file_einride_netlify_cms_v1_annotations_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*HiddenWidget_DefaultBool)(nil),
		(*HiddenWidget_DefaultString)(nil),
		(*HiddenWidget_DefaultDouble)(nil),
		(*HiddenWidget_DefaultInt64)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_einride_netlify_cms_v1_annotations_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   30,
			NumExtensions: 3,
			NumServices:   0,
		},
		GoTypes:           file_einride_netlify_cms_v1_annotations_proto_goTypes,
		DependencyIndexes: file_einride_netlify_cms_v1_annotations_proto_depIdxs,
		EnumInfos:         file_einride_netlify_cms_v1_annotations_proto_enumTypes,
		MessageInfos:      file_einride_netlify_cms_v1_annotations_proto_msgTypes,
		ExtensionInfos:    file_einride_netlify_cms_v1_annotations_proto_extTypes,
	}.Build()
	File_einride_netlify_cms_v1_annotations_proto = out.File
	file_einride_netlify_cms_v1_annotations_proto_rawDesc = nil
	file_einride_netlify_cms_v1_annotations_proto_goTypes = nil
	file_einride_netlify_cms_v1_annotations_proto_depIdxs = nil
}
